{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"strong\", null, \"Title:\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"strong\", null, \"Content:\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"strong\", null, \"Author:\", -1 /* HOISTED */);\nconst _hoisted_5 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _ctx.note ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"p\", null, [_hoisted_2, _createTextVNode(\" \" + _toDisplayString(_ctx.note.title), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_hoisted_3, _createTextVNode(\" \" + _toDisplayString(_ctx.note.content), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_hoisted_4, _createTextVNode(\" \" + _toDisplayString(_ctx.note.author.username), 1 /* TEXT */)]), _ctx.user.id === _ctx.note.author.id ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"p\", null, [_createVNode(_component_router_link, {\n    to: {\n      name: 'EditNote',\n      params: {\n        id: _ctx.note.id\n      }\n    },\n    class: \"btn btn-primary\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Edit\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"to\"])]), _createElementVNode(\"p\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.removeNote()),\n    class: \"btn btn-secondary\"\n  }, \"Delete\")])])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"mappings":";;;;gCAEOA,oBAAuB,gBAAf,QAAM;gCACdA,oBAAyB,gBAAjB,UAAQ;gCAChBA,oBAAwB,gBAAhB,SAAO;;;;;;SAHTC,SAAI,kBAAfC,oBASM,oBARJF,oBAA+C,YAA5CG,UAAuB,sBAAC,oBAAGF,SAAI,CAACG,KAAK,oBACxCJ,oBAAmD,YAAhDK,UAAyB,sBAAC,oBAAGJ,SAAI,CAACK,OAAO,oBAC5CN,oBAA0D,YAAvDO,UAAwB,sBAAC,oBAAGN,SAAI,CAACO,MAAM,CAACC,QAAQ,oBAExCR,SAAI,CAACS,EAAE,KAAKT,SAAI,CAACO,MAAM,CAACE,EAAE,kBAArCR,oBAGM,oBAFJF,oBAA6G,YAA1GW,aAAsGC;IAAxFC,EAAE;MAAAC;MAAAC;QAAAL,IAAiCT,SAAI,CAACS;MAAE;IAAA;IAAIM,KAAK,EAAC;;sBAAkB,MAAI,kBAAJ,MAAI;;+BAC3FhB,oBAA8E,YAA3EA,oBAAuE;IAA9DiB,OAAK,sCAAEhB,eAAU;IAAIe,KAAK,EAAC;KAAoB,QAAM","names":["_createElementVNode","_ctx","_createElementBlock","_hoisted_2","title","_hoisted_3","content","_hoisted_4","author","username","id","_createVNode","_component_router_link","to","name","params","class","onClick"],"sourceRoot":"","sources":["C:\\Data\\devops\\vue\\healthMon\\services\\frontend\\src\\views\\NoteView.vue"],"sourcesContent":["<template>\n  <div v-if=\"note\">\n    <p><strong>Title:</strong> {{ note.title }}</p>\n    <p><strong>Content:</strong> {{ note.content }}</p>\n    <p><strong>Author:</strong> {{ note.author.username }}</p>\n\n    <div v-if=\"user.id === note.author.id\">\n      <p><router-link :to=\"{name: 'EditNote', params:{id: note.id}}\" class=\"btn btn-primary\">Edit</router-link></p>\n      <p><button @click=\"removeNote()\" class=\"btn btn-secondary\">Delete</button></p>\n    </div>\n  </div>\n</template>\n\n\n<script>\nimport { defineComponent } from 'vue';\nimport { mapGetters, mapActions } from 'vuex';\n\nexport default defineComponent({\n  name: 'NoteView',\n  props: ['id'],\n  async created() {\n    try {\n      await this.viewNote(this.id);\n    } catch (error) {\n      console.error(error);\n      this.$router.push('/dashboard');\n    }\n  },\n  computed: {\n    ...mapGetters({ note: 'stateNote', user: 'stateUser'}),\n  },\n  methods: {\n    ...mapActions(['viewNote', 'deleteNote']),\n    async removeNote() {\n      try {\n        await this.deleteNote(this.id);\n        this.$router.push('/dashboard');\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  },\n});\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}