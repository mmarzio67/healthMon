{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      email: \"\",\n      age: null,\n      password: \"\",\n      confirmPassword: \"\",\n      country: \"usa\",\n      hobbyInputs: [],\n      terms: false\n    };\n  },\n  methods: {\n    onAddHobby() {\n      const newHobby = {\n        id: Math.random() * Math.random() * 1000,\n        value: \"\"\n      };\n      this.hobbyInputs.push(newHobby);\n    },\n    onDeleteHobby(id) {\n      this.hobbyInputs = this.hobbyInputs.filter(hobby => hobby.id !== id);\n    },\n    onSubmit() {\n      const formData = {\n        email: this.email,\n        age: this.age,\n        password: this.password,\n        confirmPassword: this.confirmPassword,\n        country: this.country,\n        hobbies: this.hobbyInputs.map(hobby => hobby.value),\n        terms: this.terms\n      };\n      console.log(\"onSubmit:\", formData);\n      this.$store.dispatch(\"signup\", formData);\n    }\n  }\n};","map":{"version":3,"names":["data","email","age","password","confirmPassword","country","hobbyInputs","terms","methods","onAddHobby","newHobby","id","Math","random","value","push","onDeleteHobby","filter","hobby","onSubmit","formData","hobbies","map","console","log","$store","dispatch"],"sources":["src/components/auth/signUp.vue"],"sourcesContent":["<template>\r\n  <div id=\"signup\">\r\n    <div class=\"signup-form\">\r\n      <form @submit.prevent=\"onSubmit\">\r\n        <div class=\"input\">\r\n          <label for=\"email\">Mail</label>\r\n          <input type=\"email\" id=\"email\" v-model=\"email\" />\r\n        </div>\r\n        <div class=\"input\">\r\n          <label for=\"age\">Your Age</label>\r\n          <input type=\"number\" id=\"age\" v-model.number=\"age\" />\r\n        </div>\r\n        <div class=\"input\">\r\n          <label for=\"password\">Password</label>\r\n          <input type=\"password\" id=\"password\" v-model=\"password\" />\r\n        </div>\r\n        <div class=\"input\">\r\n          <label for=\"confirm-password\">Confirm Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"confirm-password\"\r\n            v-model=\"confirmPassword\"\r\n          />\r\n        </div>\r\n        <div class=\"input\">\r\n          <label for=\"country\">Country</label>\r\n          <select id=\"country\" v-model=\"country\">\r\n            <option value=\"usa\">USA</option>\r\n            <option value=\"india\">India</option>\r\n            <option value=\"uk\">UK</option>\r\n            <option value=\"germany\">Germany</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"hobbies\">\r\n          <h3>Add some Hobbies</h3>\r\n          <button @click=\"onAddHobby\" type=\"button\">Add Hobby</button>\r\n          <div class=\"hobby-list\">\r\n            <div\r\n              class=\"input\"\r\n              v-for=\"(hobbyInput, index) in hobbyInputs\"\r\n              :key=\"hobbyInput.id\"\r\n            >\r\n              <label :for=\"hobbyInput.id\">Hobby #{{ index }}</label>\r\n              <input\r\n                type=\"text\"\r\n                :id=\"hobbyInput.id\"\r\n                v-model=\"hobbyInput.value\"\r\n              />\r\n              <button @click=\"onDeleteHobby(hobbyInput.id)\" type=\"button\">\r\n                X\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"input inline\">\r\n          <input type=\"checkbox\" id=\"terms\" v-model=\"terms\" />\r\n          <label for=\"terms\">Accept Terms of Use</label>\r\n        </div>\r\n        <div class=\"submit\">\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      email: \"\",\r\n      age: null,\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      country: \"usa\",\r\n      hobbyInputs: [],\r\n      terms: false,\r\n    };\r\n  },\r\n  methods: {\r\n    onAddHobby() {\r\n      const newHobby = {\r\n        id: Math.random() * Math.random() * 1000,\r\n        value: \"\",\r\n      };\r\n      this.hobbyInputs.push(newHobby);\r\n    },\r\n    onDeleteHobby(id) {\r\n      this.hobbyInputs = this.hobbyInputs.filter((hobby) => hobby.id !== id);\r\n    },\r\n    onSubmit() {\r\n      const formData = {\r\n        email: this.email,\r\n        age: this.age,\r\n        password: this.password,\r\n        confirmPassword: this.confirmPassword,\r\n        country: this.country,\r\n        hobbies: this.hobbyInputs.map((hobby) => hobby.value),\r\n        terms: this.terms,\r\n      };\r\n      console.log(\"onSubmit:\", formData);\r\n      this.$store.dispatch(\"signup\", formData);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.signup-form {\r\n  width: 400px;\r\n  margin: 30px auto;\r\n  border: 1px solid #eee;\r\n  padding: 20px;\r\n  box-shadow: 0 2px 3px #ccc;\r\n}\r\n\r\n.input {\r\n  margin: 10px auto;\r\n}\r\n\r\n.input label {\r\n  display: block;\r\n  color: #4e4e4e;\r\n  margin-bottom: 6px;\r\n}\r\n\r\n.input.inline label {\r\n  display: inline;\r\n}\r\n\r\n.input input {\r\n  font: inherit;\r\n  width: 100%;\r\n  padding: 6px 12px;\r\n  box-sizing: border-box;\r\n  border: 1px solid #ccc;\r\n}\r\n\r\n.input.inline input {\r\n  width: auto;\r\n}\r\n\r\n.input input:focus {\r\n  outline: none;\r\n  border: 1px solid #521751;\r\n  background-color: #eee;\r\n}\r\n\r\n.input select {\r\n  border: 1px solid #ccc;\r\n  font: inherit;\r\n}\r\n\r\n.hobbies button {\r\n  border: 1px solid #521751;\r\n  background: #521751;\r\n  color: white;\r\n  padding: 6px;\r\n  font: inherit;\r\n  cursor: pointer;\r\n}\r\n\r\n.hobbies button:hover,\r\n.hobbies button:active {\r\n  background-color: #8d4288;\r\n}\r\n\r\n.hobbies input {\r\n  width: 90%;\r\n}\r\n\r\n.submit button {\r\n  border: 1px solid #521751;\r\n  color: #521751;\r\n  padding: 10px 20px;\r\n  font: inherit;\r\n  cursor: pointer;\r\n}\r\n\r\n.submit button:hover,\r\n.submit button:active {\r\n  background-color: #521751;\r\n  color: white;\r\n}\r\n\r\n.submit button[disabled],\r\n.submit button[disabled]:hover,\r\n.submit button[disabled]:active {\r\n  border: 1px solid #ccc;\r\n  background-color: transparent;\r\n  color: #ccc;\r\n  cursor: not-allowed;\r\n}\r\n</style>\r\n"],"mappings":";AAmEA;EACAA,KAAA;IACA;MACAC,KAAA;MACAC,GAAA;MACAC,QAAA;MACAC,eAAA;MACAC,OAAA;MACAC,WAAA;MACAC,KAAA;IACA;EACA;EACAC,OAAA;IACAC,WAAA;MACA,MAAAC,QAAA;QACAC,EAAA,EAAAC,IAAA,CAAAC,MAAA,KAAAD,IAAA,CAAAC,MAAA;QACAC,KAAA;MACA;MACA,KAAAR,WAAA,CAAAS,IAAA,CAAAL,QAAA;IACA;IACAM,cAAAL,EAAA;MACA,KAAAL,WAAA,QAAAA,WAAA,CAAAW,MAAA,CAAAC,KAAA,IAAAA,KAAA,CAAAP,EAAA,KAAAA,EAAA;IACA;IACAQ,SAAA;MACA,MAAAC,QAAA;QACAnB,KAAA,OAAAA,KAAA;QACAC,GAAA,OAAAA,GAAA;QACAC,QAAA,OAAAA,QAAA;QACAC,eAAA,OAAAA,eAAA;QACAC,OAAA,OAAAA,OAAA;QACAgB,OAAA,OAAAf,WAAA,CAAAgB,GAAA,CAAAJ,KAAA,IAAAA,KAAA,CAAAJ,KAAA;QACAP,KAAA,OAAAA;MACA;MACAgB,OAAA,CAAAC,GAAA,cAAAJ,QAAA;MACA,KAAAK,MAAA,CAAAC,QAAA,WAAAN,QAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}