{"ast":null,"code":"import axios from 'axios';\nconst state = {\n  user: null\n};\nconst getters = {\n  isAuthenticated: state => !!state.user,\n  stateUser: state => state.user\n};\nconst actions = {\n  async register({\n    dispatch\n  }, form) {\n    await axios.post('register', form);\n    let UserForm = new FormData();\n    UserForm.append('username', form.username);\n    UserForm.append('password', form.password);\n    await dispatch('logIn', UserForm);\n  },\n  async logIn({\n    dispatch\n  }, user) {\n    await axios.post('login', user);\n    await dispatch('viewMe');\n  },\n  async viewMe({\n    commit\n  }) {\n    let {\n      data\n    } = await axios.get('users/whoami');\n    await commit('setUser', data);\n  },\n  // eslint-disable-next-line no-empty-pattern\n  async deleteUser({}, id) {\n    await axios.delete(`user/${id}`);\n  },\n  async logOut({\n    commit\n  }) {\n    let user = null;\n    commit('logout', user);\n  }\n};\nconst mutations = {\n  setUser(state, username) {\n    state.user = username;\n  },\n  logout(state, user) {\n    state.user = user;\n  }\n};\nexport default {\n  state,\n  getters,\n  actions,\n  mutations\n};","map":{"version":3,"names":["axios","state","user","getters","isAuthenticated","stateUser","actions","register","dispatch","form","post","UserForm","FormData","append","username","password","logIn","viewMe","commit","data","get","deleteUser","id","delete","logOut","mutations","setUser","logout"],"sources":["C:/Data/devops/vue/healthMon/services/frontend/src/state/modules/users.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst state = {\r\n  user: null,\r\n};\r\n\r\nconst getters = {\r\n  isAuthenticated: state => !!state.user,\r\n  stateUser: state => state.user,\r\n};\r\n\r\nconst actions = {\r\n  async register({dispatch}, form) {\r\n    await axios.post('register', form);\r\n    let UserForm = new FormData();\r\n    UserForm.append('username', form.username);\r\n    UserForm.append('password', form.password);\r\n    await dispatch('logIn', UserForm);\r\n  },\r\n  async logIn({dispatch}, user) {\r\n    await axios.post('login', user);\r\n    await dispatch('viewMe');\r\n  },\r\n  async viewMe({commit}) {\r\n    let {data} = await axios.get('users/whoami');\r\n    await commit('setUser', data);\r\n  },\r\n  // eslint-disable-next-line no-empty-pattern\r\n  async deleteUser({}, id) {\r\n    await axios.delete(`user/${id}`);\r\n  },\r\n  async logOut({commit}) {\r\n    let user = null;\r\n    commit('logout', user);\r\n  }\r\n};\r\n\r\nconst mutations = {\r\n  setUser(state, username) {\r\n    state.user = username;\r\n  },\r\n  logout(state, user){\r\n    state.user = user;\r\n  },\r\n};\r\n\r\nexport default {\r\n  state,\r\n  getters,\r\n  actions,\r\n  mutations\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,KAAK,GAAG;EACZC,IAAI,EAAE;AACR,CAAC;AAED,MAAMC,OAAO,GAAG;EACdC,eAAe,EAAEH,KAAK,IAAI,CAAC,CAACA,KAAK,CAACC,IAAI;EACtCG,SAAS,EAAEJ,KAAK,IAAIA,KAAK,CAACC;AAC5B,CAAC;AAED,MAAMI,OAAO,GAAG;EACd,MAAMC,QAAQA,CAAC;IAACC;EAAQ,CAAC,EAAEC,IAAI,EAAE;IAC/B,MAAMT,KAAK,CAACU,IAAI,CAAC,UAAU,EAAED,IAAI,CAAC;IAClC,IAAIE,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC7BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEJ,IAAI,CAACK,QAAQ,CAAC;IAC1CH,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEJ,IAAI,CAACM,QAAQ,CAAC;IAC1C,MAAMP,QAAQ,CAAC,OAAO,EAAEG,QAAQ,CAAC;EACnC,CAAC;EACD,MAAMK,KAAKA,CAAC;IAACR;EAAQ,CAAC,EAAEN,IAAI,EAAE;IAC5B,MAAMF,KAAK,CAACU,IAAI,CAAC,OAAO,EAAER,IAAI,CAAC;IAC/B,MAAMM,QAAQ,CAAC,QAAQ,CAAC;EAC1B,CAAC;EACD,MAAMS,MAAMA,CAAC;IAACC;EAAM,CAAC,EAAE;IACrB,IAAI;MAACC;IAAI,CAAC,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAAC,cAAc,CAAC;IAC5C,MAAMF,MAAM,CAAC,SAAS,EAAEC,IAAI,CAAC;EAC/B,CAAC;EACD;EACA,MAAME,UAAUA,CAAC,CAAC,CAAC,EAAEC,EAAE,EAAE;IACvB,MAAMtB,KAAK,CAACuB,MAAM,CAAE,QAAOD,EAAG,EAAC,CAAC;EAClC,CAAC;EACD,MAAME,MAAMA,CAAC;IAACN;EAAM,CAAC,EAAE;IACrB,IAAIhB,IAAI,GAAG,IAAI;IACfgB,MAAM,CAAC,QAAQ,EAAEhB,IAAI,CAAC;EACxB;AACF,CAAC;AAED,MAAMuB,SAAS,GAAG;EAChBC,OAAOA,CAACzB,KAAK,EAAEa,QAAQ,EAAE;IACvBb,KAAK,CAACC,IAAI,GAAGY,QAAQ;EACvB,CAAC;EACDa,MAAMA,CAAC1B,KAAK,EAAEC,IAAI,EAAC;IACjBD,KAAK,CAACC,IAAI,GAAGA,IAAI;EACnB;AACF,CAAC;AAED,eAAe;EACbD,KAAK;EACLE,OAAO;EACPG,OAAO;EACPmB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}