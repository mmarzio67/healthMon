{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"../../axios-auth\";\nimport globalAxios from \"axios\";\nimport router from \"../../router\";\nexport default {\n  state: {\n    idToken: null,\n    userId: null,\n    user: null\n  },\n  mutations: {\n    authUser(state, userData) {\n      state.idToken = userData.token, state.userId = userData.userId;\n    },\n    storeUser(state, user) {\n      state.user = user;\n    },\n    clearAuthData(state) {\n      state.idToken = null;\n      state.userId = null;\n    }\n  },\n  actions: {\n    signup({\n      commit,\n      dispatch\n    }, authData) {\n      axios.post(\"/accounts:signUp?key=AIzaSyBqPCD264OvFFMibq-b5Q9q_xqp23598rg\", {\n        email: authData.email,\n        password: authData.password,\n        returnSecureToken: true\n      }).then(res => {\n        console.log(res);\n        commit(\"authUser\", {\n          token: res.data.idToken,\n          userId: res.data.localId\n        });\n        const now = new Date();\n        const expirationDate = new Date(now.getTime() + res.data.expiresIn * 1000);\n        localStorage.setItem(\"token\", res.data.idToken);\n        localStorage.setItem(\"userId\", res.data.localId);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        dispatch(\"storeUser\", authData);\n        dispatch(\"setLogoutTimer\", res.data.expiresIn).catch(error => console.log(error));\n      });\n    },\n    login({\n      commit,\n      dispatch\n    }, authData) {\n      axios.post(\"/accounts:signInWithPassword?key=AIzaSyBqPCD264OvFFMibq-b5Q9q_xqp23598rg\", {\n        email: authData.email,\n        password: authData.password,\n        returnSecureToken: true\n      }).then(res => {\n        console.log(res);\n        const now = new Date();\n        const expirationDate = new Date(now.getTime() + res.data.expiresIn * 1000);\n        localStorage.setItem(\"token\", res.data.idToken);\n        localStorage.setItem(\"userId\", res.data.localId);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        commit(\"authUser\", {\n          token: res.data.idToken,\n          userId: res.data.localId\n        });\n        dispatch(\"setLogoutTimer\", res.data.expiresIn);\n      }).catch(error => console.log(error));\n    },\n    tryAutoLogin({\n      commit\n    }) {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        return;\n      }\n      const expirationDate = localStorage.getItem(\"expirationDate\");\n      const now = new Date();\n      if (now >= expirationDate) {\n        return;\n      }\n      const userId = localStorage.getItem(\"userId\");\n      commit(\"authUser\", {\n        token: token,\n        userId: userId\n      });\n    },\n    logout({\n      commit\n    }) {\n      commit(\"clearAuthData\");\n      localStorage.removeItem(\"expirationDate\");\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"userId\");\n      router.replace(\"/signin\");\n    },\n    storeUser({\n      state\n    }, userData) {\n      if (!state.idToken) {\n        return;\n      }\n      globalAxios.post(\"/users.json\" + \"?auth=\" + state.idToken, userData).then(res => console.log(res)).catch(error => console.log(error));\n    },\n    fetchUser({\n      commit,\n      state\n    }) {\n      if (!state.idToken) {\n        return;\n      }\n      globalAxios.get(\"/users.json\" + \"?auth=\" + state.idToken).then(res => {\n        console.log(res);\n        const data = res.data;\n        const users = [];\n        for (let key in data) {\n          const user = data[key];\n          user.id = key;\n          users.push(user);\n        }\n        console.log(users);\n        commit(\"storeUser\", users[0]);\n      }).catch(error => console.log(error));\n    }\n  },\n  getters: {\n    user(state) {\n      return state.user;\n    },\n    isAuthenticated(state) {\n      return state.idToken !== null;\n    }\n  }\n};","map":{"version":3,"names":["axios","globalAxios","router","state","idToken","userId","user","mutations","authUser","userData","token","storeUser","clearAuthData","actions","signup","commit","dispatch","authData","post","email","password","returnSecureToken","then","res","console","log","data","localId","now","Date","expirationDate","getTime","expiresIn","localStorage","setItem","catch","error","login","tryAutoLogin","getItem","logout","removeItem","replace","fetchUser","get","users","key","id","push","getters","isAuthenticated"],"sources":["C:/Data/devops/vue/healthMon/services/frontend/src/state/modules/auth.js"],"sourcesContent":["import axios from \"../../axios-auth\";\r\nimport globalAxios from \"axios\";\r\nimport router from \"../../router\";\r\n\r\nexport default {\r\n  state: {\r\n    idToken: null,\r\n    userId: null,\r\n    user: null,\r\n  },\r\n  mutations: {\r\n    authUser(state, userData) {\r\n      (state.idToken = userData.token), (state.userId = userData.userId);\r\n    },\r\n    storeUser(state, user) {\r\n      state.user = user;\r\n    },\r\n    clearAuthData(state) {\r\n      state.idToken = null;\r\n      state.userId = null;\r\n    },\r\n  },\r\n  actions: {\r\n    signup({ commit, dispatch }, authData) {\r\n      axios\r\n        .post(\"/accounts:signUp?key=AIzaSyBqPCD264OvFFMibq-b5Q9q_xqp23598rg\", {\r\n          email: authData.email,\r\n          password: authData.password,\r\n          returnSecureToken: true,\r\n        })\r\n        .then((res) => {\r\n          console.log(res);\r\n          commit(\"authUser\", {\r\n            token: res.data.idToken,\r\n            userId: res.data.localId,\r\n          });\r\n          const now = new Date();\r\n          const expirationDate = new Date(\r\n            now.getTime() + res.data.expiresIn * 1000\r\n          );\r\n          localStorage.setItem(\"token\", res.data.idToken);\r\n          localStorage.setItem(\"userId\", res.data.localId);\r\n          localStorage.setItem(\"expirationDate\", expirationDate);\r\n          dispatch(\"storeUser\", authData);\r\n          dispatch(\"setLogoutTimer\", res.data.expiresIn).catch((error) =>\r\n            console.log(error)\r\n          );\r\n        });\r\n      \r\n    },\r\n    login({ commit, dispatch }, authData) {\r\n      axios\r\n        .post(\r\n          \"/accounts:signInWithPassword?key=AIzaSyBqPCD264OvFFMibq-b5Q9q_xqp23598rg\",\r\n          {\r\n            email: authData.email,\r\n            password: authData.password,\r\n            returnSecureToken: true,\r\n          }\r\n        )\r\n        .then((res) => {\r\n          console.log(res);\r\n          const now = new Date();\r\n          const expirationDate = new Date(\r\n            now.getTime() + res.data.expiresIn * 1000\r\n          );\r\n          localStorage.setItem(\"token\", res.data.idToken);\r\n          localStorage.setItem(\"userId\", res.data.localId);\r\n          localStorage.setItem(\"expirationDate\", expirationDate);\r\n          commit(\"authUser\", {\r\n            token: res.data.idToken,\r\n            userId: res.data.localId,\r\n          });\r\n          dispatch(\"setLogoutTimer\", res.data.expiresIn);\r\n        })\r\n        .catch((error) => console.log(error));\r\n    },\r\n    tryAutoLogin({ commit }) {\r\n      const token = localStorage.getItem(\"token\");\r\n      if (!token) {\r\n        return;\r\n      }\r\n      const expirationDate = localStorage.getItem(\"expirationDate\");\r\n      const now = new Date();\r\n      if (now >= expirationDate) {\r\n        return;\r\n      }\r\n      const userId = localStorage.getItem(\"userId\");\r\n      commit(\"authUser\", {\r\n        token: token,\r\n        userId: userId,\r\n      });\r\n    },\r\n    logout({ commit }) {\r\n      commit(\"clearAuthData\");\r\n      localStorage.removeItem(\"expirationDate\");\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"userId\");\r\n      router.replace(\"/signin\");\r\n    },\r\n    storeUser({ state }, userData) {\r\n      if (!state.idToken) {\r\n        return;\r\n      }\r\n      globalAxios\r\n        .post(\"/users.json\" + \"?auth=\" + state.idToken, userData)\r\n        .then((res) => console.log(res))\r\n        .catch((error) => console.log(error));\r\n    },\r\n    fetchUser({ commit, state }) {\r\n      if (!state.idToken) {\r\n        return;\r\n      }\r\n      globalAxios\r\n        .get(\"/users.json\" + \"?auth=\" + state.idToken)\r\n        .then((res) => {\r\n          console.log(res);\r\n          const data = res.data;\r\n          const users = [];\r\n          for (let key in data) {\r\n            const user = data[key];\r\n            user.id = key;\r\n            users.push(user);\r\n          }\r\n          console.log(users);\r\n          commit(\"storeUser\", users[0]);\r\n        })\r\n        .catch((error) => console.log(error));\r\n    },\r\n  },\r\n  getters: {\r\n    user(state) {\r\n      return state.user;\r\n    },\r\n    isAuthenticated(state) {\r\n      return state.idToken !== null;\r\n    },\r\n  },\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}